#Use matrix to speed up the build process
strategy:
  matrix:
    TARGET_INTELSILICONPKG:
      Build.Pkgs: 'IntelSiliconPkg'

variables:
  GCC_AARCH_PREFIX: bin/aarch64-linux-gnu-
  GCC_ARM_PREFIX: bin/arm-linux-gnueabihf-

workspace:
  clean: all

steps:
- checkout: self
  clean: true
  
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7.x'
    architecture: 'x64'

- script: python -m pip install --upgrade pip
  displayName: 'Install/Upgrade pip'

- script: pip install -r requirements.txt --upgrade
  displayName: 'Install/Upgrade mu_build'


#Build repo
- task: CmdLine@1
  displayName: CI Setup $(Build.Pkgs)
  inputs:
    filename: stuart_ci_setup
    arguments: -c CISettings.py --force-git

- task: CmdLine@1
  displayName: Submodule Setup $(Build.Pkgs)
  inputs:
    filename: stuart_setup
    arguments: -c CISettings.py

- task: CmdLine@1
  displayName: Update $(Build.Pkgs)
  inputs:
    filename: stuart_update
    arguments: -c CISettings.py --Tool_Chain GCC5

- task: CmdLine@1
  displayName: Build and Test $(Build.Pkgs)
  inputs:
    filename: stuart_ci_build
    arguments: -c CISettings.py --Tool_Chain GCC5 -p $(Build.Pkgs)


# Publish Test Results to Azure Pipelines/TFS
- task: PublishTestResults@2
  displayName: 'Publish junit test results'
  continueOnError: true
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit
    testResultsFiles: 'Build/TestSuites.xml'
    testRunTitle: "$(Build.Pkgs)"
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    mergeTestResults: true # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    publishRunAttachments: true # Optional

# Copy the build logs to the artifact staging directory
- task: CopyFiles@2
  displayName: "Copy build logs"
  inputs:
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    contents: |
      Build/**/BUILDLOG_*.txt
      Build/**/BUILDLOG_*.md
      Build/**/CI_*.txt
      Build/**/CI_*.md
      Build/**/TestSuites.xml
    flattenFolders: true

# Publish build artifacts to Azure Artifacts/TFS or a file share
- task: PublishBuildArtifacts@1
  continueOnError: true
  displayName: "Publish build logs"
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'Build Logs $(Build.Pkgs)'
